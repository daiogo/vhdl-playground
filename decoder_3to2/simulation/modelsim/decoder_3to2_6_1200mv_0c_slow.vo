// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "07/06/2016 00:52:57"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module decoder_3to2 (
	x,
	y);
input 	[2:0] x;
output 	[1:0] y;

// Design Ports Information
// x[0]	=>  Location: PIN_B6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y[0]	=>  Location: PIN_C12,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y[1]	=>  Location: PIN_F11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x[1]	=>  Location: PIN_C11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x[2]	=>  Location: PIN_F10,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("decoder_3to2_6_1200mv_0c_v_slow.sdo");
// synopsys translate_on

wire \x[0]~input_o ;
wire \y[0]~output_o ;
wire \y[1]~output_o ;
wire \x[1]~input_o ;
wire \x[2]~input_o ;


// Location: IOOBUF_X31_Y31_N9
cycloneiv_io_obuf \y[0]~output (
	.i(\x[1]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[0]~output .bus_hold = "false";
defparam \y[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X33_Y24_N9
cycloneiv_io_obuf \y[1]~output (
	.i(!\x[2]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \y[1]~output .bus_hold = "false";
defparam \y[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X31_Y31_N1
cycloneiv_io_ibuf \x[1]~input (
	.i(x[1]),
	.ibar(gnd),
	.o(\x[1]~input_o ));
// synopsys translate_off
defparam \x[1]~input .bus_hold = "false";
defparam \x[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X33_Y24_N1
cycloneiv_io_ibuf \x[2]~input (
	.i(x[2]),
	.ibar(gnd),
	.o(\x[2]~input_o ));
// synopsys translate_off
defparam \x[2]~input .bus_hold = "false";
defparam \x[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X14_Y31_N8
cycloneiv_io_ibuf \x[0]~input (
	.i(x[0]),
	.ibar(gnd),
	.o(\x[0]~input_o ));
// synopsys translate_off
defparam \x[0]~input .bus_hold = "false";
defparam \x[0]~input .simulate_z_as = "z";
// synopsys translate_on

assign y[0] = \y[0]~output_o ;

assign y[1] = \y[1]~output_o ;

endmodule
